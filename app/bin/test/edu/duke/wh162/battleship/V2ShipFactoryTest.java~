package edu.duke.wh162.battleship;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

public class V2ShipFactoryTest {

  private void checkShip(Ship<Character> testShip, String expectedName, char expectedLetter, Coordinate... expectedLocs) {
    assertEquals(expectedName, testShip.getName());
    for (Coordinate c: expectedLocs) {
      assertTrue(testShip.occupiesCoordinates(c));
      assertEquals(expectedLetter, testShip.getDisplayInfoAt(c, true));
    }
  }
  
  @Test
  public void test_makeShip() {

    V2ShipFactory sf1 = new V2ShipFactory();
    Placement p1_1 = new Placement(new Coordinate(3, 4), 'H');
    Placement p1_2 = new Placement(new Coordinate(3, 4), 'V');
    Ship<Character> s1_1 = sf1.makeSubmarine(p1_1);
    Ship<Character> s1_2 = sf1.makeSubmarine(p1_2);
    checkShip(s1_1, "Submarine", 's', new Coordinate(3, 4), new Coordinate(3, 5));
    checkShip(s1_2, "Submarine", 's', new Coordinate(3, 4), new Coordinate(4, 4));

    V2ShipFactory sf2 = new V2ShipFactory();
    Placement p2_1 = new Placement(new Coordinate(1, 2), 'H');
    Placement p2_2 = new Placement(new Coordinate(1, 2), 'V');
    Ship<Character> s2_1 = sf2.makeDestroyer(p2_1);
    Ship<Character> s2_2 = sf2.makeDestroyer(p2_2);
    checkShip(s2_1, "Destroyer", 'd', new Coordinate(1, 2), new Coordinate(1, 3), new Coordinate(1, 4));
    checkShip(s2_2, "Destroyer", 'd', new Coordinate(1, 2), new Coordinate(2, 2), new Coordinate(3, 2));

    



    
  }

}
